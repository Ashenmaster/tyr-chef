version: "3"
services:
  letsencrypt:
    image: linuxserver/letsencrypt:amd64-0.33.1-ls19
    restart: always
    networks:
      - tyr_network
    depends_on:
      - portainer
      - qbittorrent
      - nzbget
      - radarr
      - sonarr
      - lidarr
      - plexms
      - tautulli
      - ombi
      - hydra2
    container_name: letsencrypt-proxy
    healthcheck:
      test: curl --write-out '%{http_code}\n' --silent --output /dev/null http://localhost || exit 1
      timeout: 10s
      retries: 3
    volumes:
      - /opt/appdata/letsencrypt/config:/config
    environment:
      - &puid PUID=1001
      - &pgid PGID=999
      - EMAIL=cgray2792@gmail.com
      - URL=<%= node["fqdn"] %>
      - SUBDOMAINS=<%= @composeConfigs["configs"]["letsencrypt"].map { |domain, settings| domain.to_s }.join(",")%>
      - &tz TZ="Europe/London"
      - VALIDATION=http
    ports:
      - "80:80"
      - "443:443"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  ddclient:
    image: linuxserver/ddclient:amd64-3.9.0-ls5
    container_name: ddclient
    networks:
      - tyr_network
    environment:
      - *puid
      - *pgid
      - *tz
    volumes:
      - /etc/ddclient.conf:/config/ddclient.conf
    restart: unless-stopped
  portainer:
    image: portainer/portainer:develop
    container_name: portainer
    restart: always
    networks:
      - tyr_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/portainer/data:/data
    ports:
      - "8100:9000"
    environment:
      - *tz
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  qbittorrent:
    image: linuxserver/qbittorrent:amd64-4.1.5.99201904111248-6695-bad6034ubuntu18.04.1-ls17
    container_name: qbittorrent
    networks:
      - tyr_network
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/qbittorrent:/config
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>Downloads:/downloads
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/certs:/certs
    ports:
      - "8101:8101"
      - "6881:6881"
      - "6881:6881/udp"
    restart: always
    environment:
      - *puid
      - *pgid
      - *tz
      - UMASK_SET=002
      - WEBUI_PORT=8101
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  nzbget:
    image: linuxserver/nzbget:amd64-v20.0-ls11
    container_name: nzbget
    networks:
      - tyr_network
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/nzbget:/config
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>Downloads:/downloads
      - /opt/appdata/letsencrypt/config/etc/letsencrypt:/certs
    ports:
      - "8102:6789"
    restart: always
    environment:
      - *puid
      - *pgid
      - *tz
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  radarr:
    image: linuxserver/radarr:amd64-v0.2.0.1293-ls11
    container_name: radarr
    networks:
      - tyr_network
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/radarr:/config
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>Downloads:/downloads
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>media/movies:/movies
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/certs:/certs
    ports:
      - "8103:7878"
    restart: always
    environment:
      - *puid
      - *pgid
      - *tz
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  sonarr:
    image: linuxserver/sonarr:amd64-2.0.0.5321-ls52
    container_name: sonarr
    networks:
      - tyr_network
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/sonarr:/config
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>Downloads:/downloads
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>media/tv:/tv
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/certs:/certs
    ports:
      - "8104:8989"
    restart: always
    environment:
      - *puid
      - *pgid
      - *tz
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  lidarr:
    image: linuxserver/lidarr:amd64-0.6.1.830-ls10
    container_name: lidarr
    networks:
      - tyr_network
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/lidarr:/config
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>Downloads:/downloads
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>media/music:/music
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/certs:/certs
    ports:
      - "8117:8686"
    restart: always
    environment:
      - *puid
      - *pgid
      - *tz
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  mylar:
    image: linuxserver/mylar:amd64-3f30faee-ls17
    container_name: mylar
    networks:
      - tyr_network
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/mylar:/config
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>Downloads:/downloads
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>media/comics:/comics
    ports:
      - "8118:8090"
    restart: always
    environment:
      - *puid
      - *pgid
      - *tz
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  lazylibrarian:
    image: linuxserver/lazylibrarian:amd64-0db0c9a8-ls94
    container_name: lazylibrarian
    networks:
      - tyr_network
    environment:
      - *puid
      - *pgid
      - *tz
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>lazy:/config
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>Downloads:/downloads
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>media/books:/books
    ports:
      - 5299:5299
    restart: unless-stopped
  ubooquity:
    image: linuxserver/ubooquity:amd64-2.1.2-ls8
    container_name: ubooquity
    networks:
      - tyr_network
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/ubooquity:/config
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>media/books:/books
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>media/comics:/comics
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>Downloads:/files
    ports:
      - "8119:2202"
      - "8120:2203"
    restart: always
    environment:
      - *puid
      - *pgid
      - *tz
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  plexms:
    container_name: plexms
    restart: always
    image: plexinc/pms-docker:plexpass
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/plexms:/config
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>Downloads/plex_tmp:/transcode
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>media:/media
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/certs:/certs
    network_mode: host
    environment:
      - *tz
      - HOSTNAME="Tyr"
      - PLEX_UID=1001
      - PLEX_GID=999
      - ADVERTISE_IP="http://192.168.1.76:32400/"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  tautulli:
    container_name: tautulli
    restart: always
    image: linuxserver/tautulli:amd64-v2.1.28-ls14
    networks:
      - tyr_network
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/plexpy:/config
      - /var/log/plexpy:/logs:ro
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/certs:/certs
    ports:
      - "8105:8181"
    environment:
      - *puid
      - *pgid
      - TZ=Europe/London
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  ombi:
    container_name: ombi
    restart: always
    image: linuxserver/ombi:amd64-3.0.4437-ls36
    networks:
      - tyr_network
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/ombi:/config
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/certs:/certs
    ports:
      - "8106:3579"
    environment:
      - *puid
      - *pgid
      - *tz
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  hydra2:
    image: linuxserver/hydra2:amd64-v2.5.4-ls16
    container_name: hydra2
    networks:
      - tyr_network
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/hydra2:/config
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>Downloads:/downloads
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/certs:/certs
    ports:
      - "8108:5076"
    restart: always
    environment:
      - *puid
      - *pgid
      - *tz
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  jackett:
    image: linuxserver/jackett:amd64-v0.11.228-ls19
    container_name: jackett
    networks:
      - tyr_network
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker/jackett:/config
      - <%= @composeConfigs["configs"]["environment"]["mediaDir"] %>Downloads/completed:/downloads
      - /opt/appdata/letsencrypt/config/etc/letsencrypt:/certs
    ports:
      - "8109:9117"
    restart: always
    environment:
      - *puid
      - *pgid
      - *tz
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  ouroboros:
    container_name: ouroboros
    hostname: ouroboros
    image: pyouroboros/ouroboros
    environment:
      - CLEANUP=true
      - INTERVAL=300
      - LOG_LEVEL=info
      - SELF_UPDATE=true
      - TZ=Europe/London
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  influxdb:
    image: influxdb:1.7
    container_name: influxdb
    networks:
      - tyr_network
    ports:
      - "8111:8086"
    volumes:
      - /opt/appdata/influxdb:/var/lib/influxdb
    restart: always
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  grafana:
    image: grafana/grafana:6.1.4
    container_name: grafana
    networks:
      - tyr_network
    user: "472"
    healthcheck:
      test: curl --write-out '%{http_code}\n' --silent --output /dev/null http://localhost:3000 || exit 1
      timeout: 10s
      retries: 3
    ports:
      - "8112:3000"
    restart: always
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana
      - GF_SERVER_DOMAIN=tyr.vin
    depends_on:
      - influxdb
    volumes:
      - grafana-storage:/var/lib/grafana
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  telegraf:
    container_name: telegraf
    restart: always
    networks:
      - tyr_network
    image: telegraf:1.10
    ports:
      - "8113:8125/udp"
      - "8114:8092"
      - "8115:8094/udp"
    depends_on:
      - influxdb
    environment:
      HOST_PROC: /rootfs/proc
      HOST_ETC: /rootfs/etc
      HOST_SYS: /rootfs/etc
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/rootfs/sys:ro
      - /proc:/rootfs/proc:ro
      - /etc:/rootfs/etc:ro
      - /:/rootfs
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>speedtest/:/var/log/speedtest/
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  varken:
    hostname: varken
    image: boerderij/varken
    networks:
      - tyr_network
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>docker-varken/config-folder:/config
    environment:
      - *pgid
      - *puid
      - TZ=Europe/London
    depends_on:
      - influxdb
    restart: unless-stopped
  jenkins:
    image: jenkins/jenkins:lts
    user: root
    networks:
      - tyr_network
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - <%= @composeConfigs["configs"]["environment"]["userDir"] %>jenkins_home:/var/jenkins_home
      - /usr/bin/chef-client:/usr/bin/chef-client

volumes:
  db:
  grafana-storage:
  fbdata:

networks:
  tyr_network:
    driver: bridge
